#!/bin/python

from __future__ import print_function

import sys
import math

def noop(*args):
    pass

def debug(string):
    print("DEBUG >>> {0}".format(string))

debug=noop

def compute_newstyle_devilpoints(input):
    rdp = {} # rank devil points
    wdp = {} # win devil points
    plays = {} # number of games played
    wins = {}  # number of games won
    for game, players in input:
        debug(repr(players))
        numplayers = len(players)
        winscore = max(players.values())
        for player, score in players.items():
            plays[player] = plays.get(player, 0) + 1
            aswell = len([ x for x in players.values() if x >= score])
            aspoor = len([ x for x in players.values() if x <= score])
            rdp[player] = rdp.get(player, 1.0) * aspoor / aswell 
            if score != winscore:
                aswell = numplayers
                aspoor = len([ x for x in players.values() if x < winscore])
            else:
                wins[player] = wins.get(player, 0) + 1
            wdp[player] = wdp.get(player, 1.0) * aspoor / aswell 
    for player in rdp:
        rdp[player] = math.log(rdp[player]) 
        wdp[player] = math.log(wdp[player])
        wins[player] = wins.get(player, 0) 
    return rdp, wdp, plays, wins


def sorted_by_subentry(l, entry):
    """sort a list of tuples by their (entry-1)'th entry"""
    def valcmp(x, y):
        return cmp(x[entry], y[entry])
    c = l[:]
    c.sort(valcmp)
    return c   


def sorted_byval(d):
   """sort a list of tuples by their 2nd entries"""
   return sorted_by_subentry(d.items(), 1)


def reversed(l):
    """reverse a list"""
    c = l[:]
    c.reverse()
    return c


def load_files(inputfiles):
    """Load the specified list of files as input files.
       Input files are python/json declarations of a list
       of tuples, where the first item in the tuple is the name
       of the game that was played and the second item is a 
       dictionary of player: devilpoints score
    """
    input = []
    for inputfile in inputfiles:
        print("Loading {0}...".format(inputfile))
        inputtext = "".join(open(inputfile).readlines())
        input += eval(inputtext)
    debug("input:\n{0!r}".format(input))
    return input


def print_devil_rankings(rank, win, plays, wins):
    """Output nicely formatted devilpoint rank and winrank tables"""
    playercount = len(rank)
    rank = reversed(sorted_byval(rank))
    win = reversed(sorted_byval(win))
    maxnamelen = max([len(entry[0]) for entry in rank])
    namefmt = ">" + str(maxnamelen) + "s"
    maxplayedlen = max([len(str(x)) for x in plays.values()])
    fmtstr = ("{rankscore:> 2.4f} " +
        "{rankname:" + namefmt + "} " +
        "({rankplayed:d}) " +
        "{winscore:> 2.4f} " +
        "{winname:" + namefmt + "} won " +
        "{winwins:d} of " +
        "{winplayed:d}. ")

    #10+maxnamelen = 7 + 1 + maxnamelen + 1 + 3 + 1 - 4 
    print("Rank"," "*(10+maxnamelen),"Win",sep='')

    for i in range(playercount):
        rankname = rank[i][0]
        winname = win[i][0]
        info = {
            'rankscore' : rank[i][1],
            'rankname' : rankname,
            'rankplayed' : plays[rankname],
            'winscore' : win[i][1],
            'winname' : winname,
            'winwins' : wins[winname],
            'winplayed' : plays[winname]
        }
        print(fmtstr.format(**info))

def print_all_games(inputdata):
   maxgamelen = max([len(play[0]) for play in inputdata])
   gamefmt = "{0:>" + str(maxgamelen) + "s} :: "
   for game, players in sorted_by_subentry(inputdata, 0):
       scores = reversed(sorted_byval(players))
       playerstr = ", ".join([ k+": "+str(v) for k, v in scores ])
       print(gamefmt.format(game) + playerstr)
       



if __name__ == '__main__':

    if len(sys.argv) < 2:
        print("Usage: {0[0]} <inputfile>".format(sys.argv))
        sys.exit(1)

    inputfiles = sys.argv[1:]
    input = load_files(inputfiles)

    print("Processing {0}...".format("+".join(inputfiles)))

    rank, win, plays, wins = compute_newstyle_devilpoints(input)

    print("{0} players played {1} games ".format(len(rank), len(input)))

    print_all_games(input)

    print("Rankings...")

    print_devil_rankings(rank, win, plays, wins)

